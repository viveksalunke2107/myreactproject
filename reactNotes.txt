
React :
-it is javascript library.
-it is use to create rich User Interface.
-it is use to create single page application(SPA).
-it is not framework.
-react developed and maintain by facebook
-latest version of react is react-19

*Framework: collection of multiuple library

*Software Prequisit 
-nodejs 
  node -v // it display node version
-npm 
 npm -v 
-vs code

*Technology Prequisit
-html
-css
-javascript(basic to advanced, ES-5 and ES6, oops);

*how to create react project 
1.by using npx : no need to install configuration file 
  step1:npx create-react-app appname 
  step2:cd appname
  step3:npm start 

2.by using npm : need to install configuration file.
  step1:npm install -g create-react-app
  step2:create-react-app appname
  step3:cd appname
  step4:npm start 

3.by using Vite : it create react project with minimum file.  

*How to start react project 
npm start // it will start react project in development mode and display output on browser with localhost:3000 port number

Folder structure
node_module folder: all dependecy will install in this folder.
package.json file : all install dependecy entry will fouind here.
package-lock.json file : it will contain detail description of all dependecy
gitignore: avoid file to upload on git.
publick: it contain only static file.
src folder : actual development 

-react project work on components 

-components :-it is partial part of react app.
             -it can be any part of react app, which we can reuse multiple time .

-in react root components name is app             

*in react there are two types of components
1-function components: when our main focus is on UI Design 
2-Class components: when we have to write complex logic for UI.

Note: when we create component its file name must start with capital letter.


*How to display component output 
-import component and write its name as tag where you want.

Q.What is JSX:
-it stand for javascript and XML ,
-it makes react code eassy, and allows us to write html code in react.
-in jsx we need to wrap multiple element inside one parent element.

*props(property):
-it is parameter or function parameter which is use to pass data inside component.
-it return data in object formate.
-in function component we access props data by writting props.propsname
-in class component we access props data by writting this.props.propsname

*Functions and Events:
*hover Events
*onClick 

Task1: create one function component with name MyDetailComp in which pass fname,mname,lname,mobile,gender,address as props and display it .
Task2: create one Class component with name  in which pass fname,mname,lname,mobile,gender,address as props and display it .
=======================================================================
29/7/25

*State : 
-it is use to handle essesntial data in class component.
-it return data in object formate.
-we write State in class component constructor.
-we can access state data in class component by writting this.state.property 

-after react version 16 we can use state in function component by using hooks (useState Hook); 

*setState() method : it allows us to manupulate state propertuy values.

*destructuring : creating constant variable to store data in it.

*destructuring of state
*destructuring of props 

Task1: crete cone class component with name myCounter having state with on property having name count with value 0, you have create three button one will increment , second will decrement and thired will reset value.

*How to access Images in React component
*how to create constant file and accesss data from it.

==================================================================
30/7/25 

*React Fragment: 
-it is an alternative option for jsx.
-it is use to remove unwanted element from react project.

*component Interaction:
-when we have to pass data from parent component to child component.
-to perform component interaction they must have parent child relation in between component.

*passing state data as props to child component
*passing function as props to child component 

*PureComponent :
-it is to prevent unnecessary re-rendering of class component.
-by performing shalow comparision it prevent unnecessary re-rendering of class component.
-to achive this we have to extends class component with PureComponent.

*React.memo():
-it is to prevent unnecessary re-rendering of function component.
-by performing shalow comparision it prevent unnecessary re-rendering of function component.
-to achive this we need to pass function component name as parameter inside React.memo(componentName) method


*We saw one vs code extention to create class and fuinction component

rce : it generate class component
rconst : it generate constructor with super method and state
rfce : generayte normal function component
rafce : generate arrow function component

*How to use Bootstrap in react project 
step1: install Bootstrap 
      npm install bootstrap 
step2: go to index.js file and import its path

==================================================
31/7/25

*we saw counter Task.

*Conditional redering : display component output on the basis of condition.
-there are four ways to display output conditionally 
1. if else: if the condition is true if block will render otherwise else block.
2. element as variable: in this we store data inside on variable and return that variable.
3. use of ternary operator: it is an shorthand syntax of if else statment 
               syntax:  (condition) ? truepart : false;
4. use of short circuit(&&): it will display component output only if condition is true.
                            -it is use for null checking.

*How to use css in React component:
-in react we use className property instead of class 

1.internal css: inside an element we use style property with values
2.external css: in this we create a seperate css file and import it inside component
3.Module css : in react we use module css when we have to write css property for pertucular component. while creating module css file we have to use filename.module.css 

*Virtual DOM:
-in react instead of manipulating browser DOM directly react create virtual in its memory,where it does all necessary changes before browser DOM. virtual DOM changes what need to be changes. thats why react is fater than angular.

Task: create new Class component having name EmpDetails containing stat with emp property holding array of object data for 7 employee id,name,post,salary,gender,city , display employee data inside table by using map method.
================================================================================
6/8/25

*HOC(Higher Order component):
-it is use to to share same(Comman) bussines logic with multiple component.
-in this we use function component and share data from it 
-in this function component we pass another component as parameter.

*Error Boundary :
-it is react component which is use to handler errors in component three which occures at the time of compenent rendering 
-in this we use two class component lifecycle method 
1.getDerivedStateFromError,2.ComponentDidCatch 
1.getDerivedStateFromError: it is static method which execute automatically when error occure in component 
2.ComponentDidCatch: it is use to display error log(error information);

====================================================================================
7/8/25 

*How to display array of object data into table formate
*How to display array of object data into card formate

*Class Component Lifecycle method 
-class component lifecycle comes with four phases
1.Mounting Phase: when component initialized.
  -constructor: when class object initialized it will execute 
  -getDerivedStateFromProps : it is use to assign props data to an state.it is static method.
  -render : it is use to display component output 
  -ComponentDidMount: it execute once after component render.

2.Update Pase: when DOM manipulation is done 
   -shouldComponentUpdate: it decide there component get updated or not, it return boolean result , if it return true value then component will update otherwise not
   -getSnapshotBeforeUpdate: it return state or props value before update of it.
   -render: it is use to display component output 
   -ComponentDidUpdate: it return state or props value after update of it.

3.Unmounting Phase: when component deleted or remove 
  -componentWillunMount: it will remove all external connection with component just before deleting of component
4.ErrorPhase : when error get generated 
  -getDerivedStateFromError: when error occure in component it execute automatically.
  -ComponentDidCatch: it will display error log or information.


*Routing In React :
-navigation of component and display it output(view);
-to perform routing in react we use react-router-dom library.
npm install react-router-dom 

How to perform routing in react 
-install react-router-dom library
 npm install react-router-dom 
-to perform routing we use two library createBrowserRouter,RouterProvider
-CreateBrouwser is one methode in which we write array of object type data.
and in this we actually create routing for component

types of routing 

1.naming routing:display component output by writting its routing path name in browser url.
2.default routing: display component output without writing its path in browser url. it path must be always blank.
3.parameterize routing: display component output by writting its parameter with its routing path 
4.child routing: display one rounting inside another routing. to perform this we have to use children property in parent routing and pass array of object value to it. and to display child routing component output we have to use <Outlet/> directly in parent component render or in return as tag.

5.whild card routing: display component output when user enter wrong path name in browser url. to perform this we write * sign in routing path . and import thing is whild card always write at last , it bellow routing will never work.

src folder 
   layout folder 
       -LoginComp
       -NavComp 
       -MainDashboardComp
       -PageNotFoundComp 
   RoutingFolder 
      -mainRouting.js  file 
   Hookes folder 
      -ReactHooksComp 
      -UseStateComp
      -UseEffectComp 

-HOC 
-ErrorBoundary 
-Form Validation 
-Class component LifeCycle Method 
-Hooks 
=====================================================
13/8/25

*Hookes: in react hooks allows function component to implement class component features.
         -we can use state in function component by using hooks.
         -hookes introduce in react version 16
         -before using of it first we have to import it from react library.


*Rules to use Hooks 
-hooks will use only in function component.
-hookes always use in top level component.
-hookes can not be render conditionally.

*there are 7 Hookes in in react 
1.useState Hooks:
2.useEffect Hooks:
3.useContext Hook:
4.useRef Hook:
5.useReducer Hook:
6.useMemo Hook:
7.useCallBack Hook: 


1.useState Hooks:
-it allows function to use state in it.
-it return two parameter 1. currentState, 2. functionToUpdateState
-Syntax:    const [currentState,functionToUpdateState] = useState(values)

2.useEffect Hooks:
-it is use to perform side effect in function component.
-side effect means, fetching data from server , use of timers and , DOM Manipulation 
-it execute once immediatly after  component render.
-it takes two parameter 1. useCallBack function, 2.dependency 
syntax:   useEffect(()=>{},dependecy);

case1: when no dependecy value pass (ComponentDidMount)
syntax:   useEffect(()=>{});

case2: when dependecy value pass as blanck arrray (shouldComponentUpdate)
syntax:   useEffect(()=>{},[]);

case3: when dependecy value pass in an array.
syntax:   useEffect(()=>{},[state/props]);


Task: create One function component and write logic to increment,decrement and reset counter valye by using state
TAsk: display 10 employee data have id,name,post,salary,gender,address in table format.
==================================================================================================
9/9/25

*Form Validation : 
-checking forms data is as expected or not. 
===========================================================
10/9/25

*how to create REST Fake API 

Database: json Database
fake server: json-server 

*download nodejs 
https://nodejs.org/en/download/

node -v  //it show nodejs version 
npm -v   // it show npm version 

*how to install json server 
step1: visit npmjs.com and search json-server 
step2: copy instalation code and install json-server 
      npm install json-server
step2:upload db.json file on json-server 

      cd src/shared/database   // set folder path for db 
      json-server --watch -p 9999 db.json   // command to start json-server and upload db.json file.

step3: install axios library , it allows us to make request to server from react app .
        npm install axios

C = create 
R = read 
U = update 
D = delete 





































